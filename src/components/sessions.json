{
      "cover_image": "http://res.cloudinary.com/dzzylglrl/image/upload/v1697635780/p4lwgmvqn5nqwn39qmxp.png",
      "date": "1111-11-11",
      "from": "11:11",
      "id": 246,
      "till": "11:11",
      "title": "Session Title*",
      "venue": Object,
      "capacity": 0,
      "id": 55,
      "image": "",
      "name": "First venue",
      "venue_type": null
}


const [data, setData] = useState([]); // State to store fetched data
  const token =
    'eyJhbGciOiJSUzI1NiJ9.eyJpZCI6MzAzLCJ0eXBlIjoidXNlciIsInJhbiI6IkJORU5WSVBOTlFUWVBMS0tVQ0JWIiwic3RhdHVzIjoxfQ.YGV-jGKZj1Lp4SqlM3aiF6Aov6YVF6lZRMpKvx_Zdrpjj4C1zE-JSTKtjVboQ9de58TUViyVOc4JwiktjF_4yxnYzIrw449s584j2GiqUpxfp6OPmfAj8BAbfN_M4RoU5PXEjhcNVh5uNRtxtvxZtpECrl72_22T4he3LbqISMNHzVh5eprIKIFLt_pM7cyRKt3Njf8I89CLnq5nUpiDHnMMForamKq9jubmiYPOHpFvijEE3-jusRk0F1T32zMY_0AELXnpqhbbx6HtmMdxBahnrUNyznacdVwaSrNus8vX01N8zEcfRvkRzYuqjnZXr9jrm2iriHq80iicUG99GQ'; // Replace with your Bearer token
  const link =
    'https://qa-testing-backend-293b1363694d.herokuapp.com/api/v3/get-sessions?event_id=19'; // Replace with your API link
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(link, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        console.log('API Response:', response.data);

        // setData( response.data);
        if (response.data && Array.isArray(response.data.sessions)) {
          setData(response.data.sessions);
        } else {
          setData([]); // Set an empty array as a fallback
        }
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []); // Empty dependency array to run once on mount

  const columns = React.useMemo(
    () => [
      {
        Header: 'Session ',
        accessor: 'title',
      },
      {
        Header: 'Date',
        accessor: 'date',
      },
      {
        Header: 'Time',
        accessor: 'from',
      },
      {
        Header: 'Venue',
        accessor: 'venue.name',
      },
    ],
    []
  );

  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =
    useTable({ columns, data });